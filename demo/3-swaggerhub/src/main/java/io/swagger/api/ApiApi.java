/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.19).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.model.GoodbyeDto;
import io.swagger.model.HelloDto;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.bind.annotation.CookieValue;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.SpringCodegen", date = "2020-06-15T14:07:22.669Z[GMT]")
@Api(value = "api", description = "the api API")
public interface ApiApi {

    @ApiOperation(value = "goodbye", nickname = "goodbyeUsingGET", notes = "", response = GoodbyeDto.class, tags={ "goodbye-api", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = GoodbyeDto.class),
        @ApiResponse(code = 401, message = "Unauthorized"),
        @ApiResponse(code = 403, message = "Forbidden"),
        @ApiResponse(code = 404, message = "Not Found") })
    @RequestMapping(value = "/api/v1/goodbye/{name}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<GoodbyeDto> goodbyeUsingGET(@ApiParam(value = "name",required=true) @PathVariable("name") String name
);


    @ApiOperation(value = "goodbye", nickname = "goodbyeUsingGET1", notes = "", response = GoodbyeDto.class, tags={ "goodbye-api", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = GoodbyeDto.class),
        @ApiResponse(code = 401, message = "Unauthorized"),
        @ApiResponse(code = 403, message = "Forbidden"),
        @ApiResponse(code = 404, message = "Not Found") })
    @RequestMapping(value = "/api/v1/goodbye",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<GoodbyeDto> goodbyeUsingGET1();


    @ApiOperation(value = "Saluer une personne en particulier", nickname = "helloUsingGET", notes = "", response = HelloDto.class, tags={ "hello-api", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = HelloDto.class),
        @ApiResponse(code = 400, message = "Mauvaise requête, 123 n'est pas une valeurs valide"),
        @ApiResponse(code = 401, message = "Unauthorized"),
        @ApiResponse(code = 403, message = "Forbidden"),
        @ApiResponse(code = 404, message = "Not Found") })
    @RequestMapping(value = "/api/v1/hello/{name}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<HelloDto> helloUsingGET(@ApiParam(value = "Nom de la personne à saluer",required=true) @PathVariable("name") String name
);


    @ApiOperation(value = "Saluer le monde", nickname = "helloUsingGET1", notes = "", response = HelloDto.class, tags={ "hello-api", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = HelloDto.class),
        @ApiResponse(code = 401, message = "Unauthorized"),
        @ApiResponse(code = 403, message = "Forbidden"),
        @ApiResponse(code = 404, message = "Not Found") })
    @RequestMapping(value = "/api/v1/hello",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<HelloDto> helloUsingGET1();

}
