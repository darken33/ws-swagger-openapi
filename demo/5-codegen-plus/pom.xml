<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.2.2.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.sqli.pbousquet</groupId>
	<artifactId>testapi</artifactId>
	<version>0.0.5-SNAPSHOT</version>
	<name>TestAPI</name>
	<description>API de test du WS Swagger/OpenAPI</description>

	<properties>
		<java.version>8</java.version>
		<springfox.version>2.9.2</springfox.version>
		<version.docker.maven.plugin>0.25.2</version.docker.maven.plugin>

		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<codegen.producer.inputSpec>${project.basedir}/src/main/resources/api</codegen.producer.inputSpec>
		<codegen.producer.modelPackage>com.sqli.pbousquet.testapi.dto</codegen.producer.modelPackage>
		<codegen.producer.apiPackage>com.sqli.pbousquet.testapi.api</codegen.producer.apiPackage>
		<codegen.producer.generatorName>spring</codegen.producer.generatorName>
		<codegen.producer.templateDirectory>${project.basedir}/src/main/resources/templates/spring</codegen.producer.templateDirectory>
		<codegen.producer.library>spring-mvc</codegen.producer.library>
		<codegen.producer.generateApiTests>false</codegen.producer.generateApiTests>
		<codegen.producer.generateModelTests>false</codegen.producer.generateModelTests>
		<codegen.producer.generateSupportingFiles>true</codegen.producer.generateSupportingFiles>
		<codegen.producer.sourceFolder>src/main/java</codegen.producer.sourceFolder>
		<codegen.producer.dateLibrary>java7</codegen.producer.dateLibrary>
		<codegen.producer.java8>true</codegen.producer.java8>
		<codegen.producer.interfaceOnly>true</codegen.producer.interfaceOnly>
		<codegen.producer.hideGenerationTimestamp>false</codegen.producer.hideGenerationTimestamp>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger2</artifactId>
			<version>${springfox.version}</version>
		</dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger-common</artifactId>
			<version>${springfox.version}</version>
		</dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger-ui</artifactId>
			<version>${springfox.version}</version>
		</dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-bean-validators</artifactId>
			<version>${springfox.version}</version>
		</dependency>
		<dependency>
			<groupId>org.openapitools</groupId>
			<artifactId>jackson-databind-nullable</artifactId>
			<version>RELEASE</version>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.openapitools</groupId>
				<artifactId>openapi-generator-maven-plugin</artifactId>
				<version>4.1.0</version>
				<executions>
					<!-- Génération du code serveur des endpoints qu'on expose -->
					<execution>
						<id>1</id>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<inputSpec>${codegen.producer.inputSpec}/hello.yaml</inputSpec>
							<generatorName>${codegen.producer.generatorName}</generatorName>
							<library>${codegen.producer.library}</library>
							<templateDirectory>${codegen.producer.templateDirectory}</templateDirectory>
							<generateApiTests>${codegen.producer.generateApiTests}</generateApiTests>
							<generateModelTests>${codegen.producer.generateModelTests}</generateModelTests>
							<generateSupportingFiles>${codegen.producer.generateSupportingFiles}</generateSupportingFiles>
							<configOptions>
								<useTags>true</useTags>
								<sourceFolder>${codegen.producer.sourceFolder}</sourceFolder>
								<dateLibrary>${codegen.producer.dateLibrary}</dateLibrary>
								<java8>${codegen.producer.java8}</java8>
								<interfaceOnly>${codegen.producer.interfaceOnly}</interfaceOnly>
								<hideGenerationTimestamp>${codegen.producer.hideGenerationTimestamp}</hideGenerationTimestamp>
							</configOptions>
							<apiPackage>${codegen.producer.apiPackage}</apiPackage>
							<modelPackage>${codegen.producer.modelPackage}</modelPackage>
						</configuration>
					</execution>
					<execution>
						<id>2</id>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<inputSpec>${codegen.producer.inputSpec}/goodbye.yaml</inputSpec>
							<generatorName>${codegen.producer.generatorName}</generatorName>
							<library>${codegen.producer.library}</library>
							<templateDirectory>${codegen.producer.templateDirectory}</templateDirectory>
							<generateApiTests>${codegen.producer.generateApiTests}</generateApiTests>
							<generateModelTests>${codegen.producer.generateModelTests}</generateModelTests>
							<generateSupportingFiles>${codegen.producer.generateSupportingFiles}</generateSupportingFiles>
							<configOptions>
								<useTags>true</useTags>
								<sourceFolder>${codegen.producer.sourceFolder}</sourceFolder>
								<dateLibrary>${codegen.producer.dateLibrary}</dateLibrary>
								<java8>${codegen.producer.java8}</java8>
								<interfaceOnly>${codegen.producer.interfaceOnly}</interfaceOnly>
								<hideGenerationTimestamp>${codegen.producer.hideGenerationTimestamp}</hideGenerationTimestamp>
							</configOptions>
							<apiPackage>${codegen.producer.apiPackage}</apiPackage>
							<modelPackage>${codegen.producer.modelPackage}</modelPackage>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
		</plugins>
	</build>

</project>
